#############################################################################
# Makefile for building: Server
# Generated by qmake (2.01a) (Qt 4.5.3) on: Wed Mar 24 21:32:48 2010
# Project:  Server.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -unix -o Makefile Server.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtXml -I/usr/include -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)   -lCore -L../Core/Debug -lQtXml -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = gameplay/Frame.cpp \
		gameplay/Map.cpp \
		gameplay/Tile.cpp \
		gameplay/Physics.cpp \
		gameplay/Ship.cpp \
		gameplay/Shot.cpp \
		comm/commserver.cpp \
		comm/TCPServer.cpp \
		engine/main.cpp \
		engine/ServerEngine.cpp \
		../Core/comm/data/clientaction.cpp \
		../Core/comm/data/updateobject.cpp \
		../Core/comm/data/servermessage.cpp \
		../Core/comm/socketwrapper.cpp \
		../Core/Logger.cpp \
		../Core/comm/tcpconnection.cpp \
		../Core/comm/udpConnection.cpp \
		../Core/comm/crc.cpp moc_ServerEngine.cpp
OBJECTS       = obj/Frame.o \
		obj/Map.o \
		obj/Tile.o \
		obj/Physics.o \
		obj/Ship.o \
		obj/Shot.o \
		obj/commserver.o \
		obj/TCPServer.o \
		obj/main.o \
		obj/ServerEngine.o \
		obj/clientaction.o \
		obj/updateobject.o \
		obj/servermessage.o \
		obj/socketwrapper.o \
		obj/Logger.o \
		obj/tcpconnection.o \
		obj/udpConnection.o \
		obj/crc.o \
		obj/moc_ServerEngine.o
DIST          = /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		Server.pro
QMAKE_TARGET  = Server
DESTDIR       = 
TARGET        = Server

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Server.pro  /usr/lib64/qt4/mkspecs/linux-g++/qmake.conf /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile Server.pro
/usr/lib64/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/debug.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile Server.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/Server1.0.0 || $(MKDIR) obj/Server1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/Server1.0.0/ && $(COPY_FILE) --parents gameplay/Frame.h gameplay/Map.h gameplay/Tile.h gameplay/NewtObjects.h gameplay/Physics.h gameplay/Ship.h gameplay/Shot.h gameplay/general.h comm/commserver.h comm/TCPServer.h engine/ServerEngine.h ../Core/comm/data/clientaction.h ../Core/comm/globals.h ../Core/comm/data/bitmask.h ../Core/comm/data/updateobject.h ../Core/comm/data/servermessage.h ../Core/comm/socketwrapper.h ../Core/Logger.h ../Core/comm/tcpconnection.h ../Core/comm/udpConnection.h ../Core/comm/crc.h obj/Server1.0.0/ && $(COPY_FILE) --parents gameplay/Frame.cpp gameplay/Map.cpp gameplay/Tile.cpp gameplay/Physics.cpp gameplay/Ship.cpp gameplay/Shot.cpp comm/commserver.cpp comm/TCPServer.cpp engine/main.cpp engine/ServerEngine.cpp ../Core/comm/data/clientaction.cpp ../Core/comm/data/updateobject.cpp ../Core/comm/data/servermessage.cpp ../Core/comm/socketwrapper.cpp ../Core/Logger.cpp ../Core/comm/tcpconnection.cpp ../Core/comm/udpConnection.cpp ../Core/comm/crc.cpp obj/Server1.0.0/ && (cd `dirname obj/Server1.0.0` && $(TAR) Server1.0.0.tar Server1.0.0 && $(COMPRESS) Server1.0.0.tar) && $(MOVE) `dirname obj/Server1.0.0`/Server1.0.0.tar.gz . && $(DEL_FILE) -r obj/Server1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_ServerEngine.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_ServerEngine.cpp
moc_ServerEngine.cpp: gameplay/Frame.h \
		../Core/comm/globals.h \
		gameplay/Shot.h \
		gameplay/NewtObjects.h \
		gameplay/Ship.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/data/bitmask.h \
		gameplay/Map.h \
		gameplay/Tile.h \
		gameplay/Physics.h \
		../Core/comm/data/updateobject.h \
		comm/commserver.h \
		../Core/comm/data/servermessage.h \
		comm/TCPServer.h \
		../Core/comm/socketwrapper.h \
		../Core/Logger.h \
		../Core/comm/tcpconnection.h \
		../Core/comm/udpConnection.h \
		../Core/comm/crc.h \
		engine/ServerEngine.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) engine/ServerEngine.h -o moc_ServerEngine.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

obj/Frame.o: gameplay/Frame.cpp gameplay/Frame.h \
		../Core/comm/globals.h \
		gameplay/Shot.h \
		gameplay/NewtObjects.h \
		gameplay/Ship.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/data/bitmask.h \
		gameplay/Map.h \
		gameplay/Tile.h \
		gameplay/Physics.h \
		../Core/comm/data/updateobject.h \
		gameplay/general.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Frame.o gameplay/Frame.cpp

obj/Map.o: gameplay/Map.cpp gameplay/Map.h \
		gameplay/NewtObjects.h \
		gameplay/Shot.h \
		gameplay/Ship.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/globals.h \
		../Core/comm/data/bitmask.h \
		gameplay/Tile.h \
		gameplay/general.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Map.o gameplay/Map.cpp

obj/Tile.o: gameplay/Tile.cpp gameplay/general.h \
		gameplay/Tile.h \
		gameplay/Ship.h \
		gameplay/NewtObjects.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/globals.h \
		../Core/comm/data/bitmask.h \
		gameplay/Shot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Tile.o gameplay/Tile.cpp

obj/Physics.o: gameplay/Physics.cpp gameplay/Physics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Physics.o gameplay/Physics.cpp

obj/Ship.o: gameplay/Ship.cpp gameplay/Ship.h \
		gameplay/NewtObjects.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/globals.h \
		../Core/comm/data/bitmask.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Ship.o gameplay/Ship.cpp

obj/Shot.o: gameplay/Shot.cpp gameplay/Shot.h \
		gameplay/NewtObjects.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Shot.o gameplay/Shot.cpp

obj/commserver.o: comm/commserver.cpp comm/commserver.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/globals.h \
		../Core/comm/data/bitmask.h \
		../Core/comm/data/updateobject.h \
		../Core/comm/data/servermessage.h \
		comm/TCPServer.h \
		../Core/comm/socketwrapper.h \
		../Core/Logger.h \
		../Core/comm/tcpconnection.h \
		../Core/comm/udpConnection.h \
		../Core/comm/crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/commserver.o comm/commserver.cpp

obj/TCPServer.o: comm/TCPServer.cpp comm/TCPServer.h \
		../Core/comm/data/servermessage.h \
		../Core/comm/socketwrapper.h \
		../Core/comm/globals.h \
		../Core/Logger.h \
		../Core/comm/tcpconnection.h \
		comm/commserver.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/data/bitmask.h \
		../Core/comm/data/updateobject.h \
		../Core/comm/udpConnection.h \
		../Core/comm/crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/TCPServer.o comm/TCPServer.cpp

obj/main.o: engine/main.cpp engine/ServerEngine.h \
		gameplay/Frame.h \
		../Core/comm/globals.h \
		gameplay/Shot.h \
		gameplay/NewtObjects.h \
		gameplay/Ship.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/data/bitmask.h \
		gameplay/Map.h \
		gameplay/Tile.h \
		gameplay/Physics.h \
		../Core/comm/data/updateobject.h \
		comm/commserver.h \
		../Core/comm/data/servermessage.h \
		comm/TCPServer.h \
		../Core/comm/socketwrapper.h \
		../Core/Logger.h \
		../Core/comm/tcpconnection.h \
		../Core/comm/udpConnection.h \
		../Core/comm/crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o engine/main.cpp

obj/ServerEngine.o: engine/ServerEngine.cpp engine/ServerEngine.h \
		gameplay/Frame.h \
		../Core/comm/globals.h \
		gameplay/Shot.h \
		gameplay/NewtObjects.h \
		gameplay/Ship.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/data/bitmask.h \
		gameplay/Map.h \
		gameplay/Tile.h \
		gameplay/Physics.h \
		../Core/comm/data/updateobject.h \
		comm/commserver.h \
		../Core/comm/data/servermessage.h \
		comm/TCPServer.h \
		../Core/comm/socketwrapper.h \
		../Core/Logger.h \
		../Core/comm/tcpconnection.h \
		../Core/comm/udpConnection.h \
		../Core/comm/crc.h \
		../Core/ConfigParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ServerEngine.o engine/ServerEngine.cpp

obj/clientaction.o: ../Core/comm/data/clientaction.cpp ../Core/comm/data/clientaction.h \
		../Core/comm/globals.h \
		../Core/comm/data/bitmask.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/clientaction.o ../Core/comm/data/clientaction.cpp

obj/updateobject.o: ../Core/comm/data/updateobject.cpp ../Core/comm/data/updateobject.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/globals.h \
		../Core/comm/data/bitmask.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/updateobject.o ../Core/comm/data/updateobject.cpp

obj/servermessage.o: ../Core/comm/data/servermessage.cpp ../Core/comm/data/servermessage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/servermessage.o ../Core/comm/data/servermessage.cpp

obj/socketwrapper.o: ../Core/comm/socketwrapper.cpp ../Core/comm/socketwrapper.h \
		../Core/comm/globals.h \
		../Core/Logger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/socketwrapper.o ../Core/comm/socketwrapper.cpp

obj/Logger.o: ../Core/Logger.cpp ../Core/Logger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Logger.o ../Core/Logger.cpp

obj/tcpconnection.o: ../Core/comm/tcpconnection.cpp ../Core/comm/tcpconnection.h \
		../Core/comm/data/servermessage.h \
		../Core/comm/socketwrapper.h \
		../Core/comm/globals.h \
		../Core/Logger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/tcpconnection.o ../Core/comm/tcpconnection.cpp

obj/udpConnection.o: ../Core/comm/udpConnection.cpp ../Core/comm/udpConnection.h \
		../Core/comm/socketwrapper.h \
		../Core/comm/globals.h \
		../Core/Logger.h \
		../Core/comm/data/updateobject.h \
		../Core/comm/data/clientaction.h \
		../Core/comm/data/bitmask.h \
		../Core/comm/crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/udpConnection.o ../Core/comm/udpConnection.cpp

obj/crc.o: ../Core/comm/crc.cpp ../Core/comm/crc.h \
		../Core/comm/globals.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/crc.o ../Core/comm/crc.cpp

obj/moc_ServerEngine.o: moc_ServerEngine.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_ServerEngine.o moc_ServerEngine.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

